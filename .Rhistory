knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, fig.pos = "H")
options(qwraps2_markup = "markdown")
library(tidyverse)
library(here)
library(janitor)
library(pdftools)
# load the function to load the diagnosis reference table
source(here("coding_tables","drt_select.R"))
# load the function to load the complexity algorithm
source(here("chd_complexity_score", "esc_complexity.R"))
# load the function to load the complexity algorithm V2
source(here("CHD-Procedure-Complexity-main", "complexity_procedure.R"))
# Load the function to run CHAANZ Eligibility
source(here("chaanz_eligibility", "calc_eligibility.R"))
# chaanz drt
drt <- drt.select_V3(drt_path = here("data", "drt/"))
rch.drt <- readxl::read_xlsx(here("diagnosis_coding", "data", "RCH", "CHAANZ_Registry_Inclusion_Dx.xlsx")) %>%
clean_names() %>%
rename("rch_dx_name" = chd_diagnosis_primary_diagnosis_name,
"icd10_code" = icd10_list_for_primary_diagnosis)
ipccc_icd11 <- readxl::read_xls(here("diagnosis_coding", "data", "EPCC_IPCCC", "EACTS-STS-IPCCC-Diagnosis-Long-List-2018-06-27-ICD-11-Complete-for-distribution-with-ICD-11-terms-on-top.xls"))
ipccc_2021 <- readxl::read_xlsx(here("diagnosis_coding", "data", "EPCC_IPCCC", "IPCCC-long-2021.xlsx")) %>%
row_to_names(row_number = 6) %>%
clean_names() %>%
rename("icd_9_additional" = icd_9_2,
"icd_10_additional" = icd_10_2) %>%
drop_na(description) %>%
mutate(section_name = if_else(is.na(section), NA, description)) %>%
relocate(section_name, .after = section) %>%
fill(section, section_name, .direction = "down") %>%
drop_na(go_to) %>%
select(section, section_name, go_to,
"ipccc_name" = description,
"ipccc_code" = ipccc,
"epcc_code" = short_list,
"epcc_name" = short_list_term,
icd_10, icd_10_additional, icd_9, icd_9_additional)
write.csv(ipccc_2021, here("diagnosis_coding", "data", "ipccc", "ipccc_2021.csv"),
row.names = FALSE, na = "")
write.csv(ipccc_2021, here("diagnosis_coding", "data", "ipccc", "ipccc_2021.csv"),
row.names = FALSE, na = "")
write_rds(ipccc_2021, here("diagnosis_coding", "data", "ipccc", "ipccc_2021.rds"))
# IPCCC coding
ipccc <- read_rds(here("diagnosis_coding", "data", "ipccc", "ipccc_2021.rds"))
# EPCC coding, from EPCC publications
epcc.final <- read_csv(here("diagnosis_coding", "r-output", "epcc_coding_final.csv"))
# First version of keysoft coding, from pre 2020
keysoft.coding.v1 <- readxl::read_xlsx(here("diagnosis_coding", "data", "from_keysoft", "ICD10AM_Mapping_v1.xlsx"))
#updated version of keysoft coding, from 2024
keysoft.coding.v2 <- readxl::read_xlsx(here("diagnosis_coding", "data", "from_keysoft", "RCH_EPIC_Dx_Matchup.xlsx")) %>%
drop_na(code_id)
# ICD10AM list, v12
icd10am.dx <- read_csv(here("diagnosis_coding", "data",
"ICD-10-AM ACHI Electronic Code List - Twelfth Edition (Final 6 April 2022)",
"01 Disease Codes Current Edition (12th Edition).csv"))
icd10am.dx.2 <- read_csv(here("diagnosis_coding", "data",
"ICD-10-AM ACHI Electronic Code List - Twelfth Edition (Final 6 April 2022)",
"02 Disease Codes (12th Edition).csv"))
icd10am.proc <- read_csv(here("diagnosis_coding", "data",
"ICD-10-AM ACHI Electronic Code List - Twelfth Edition (Final 6 April 2022)",
"06 Intervention Codes Current Edition (12th Edition).csv"))
icd10am.join <- icd10am.dx %>%
select(code_id, ascii_desc, block,
block_desc, chapter_range, chapter_desc) %>%
# Join the EPCC codes from Keysoft Coding V1
left_join(
keysoft.coding.v1 %>%
select("code_id" = `ICD_10_AM code`,
"epcc_code_ks1" = EPCC_code) %>%
drop_na(code_id) %>%
mutate(icd_seq = row_number(), .by = code_id) %>%
filter(icd_seq == 1) %>%
select(-icd_seq),
by = "code_id"
) %>%
# Join the EPCC codes from Keysoft Coding V2
left_join(
keysoft.coding.v2 %>%
select(code_id,
"epcc_code_ks2" = `icd10am DIAGNOSIS_REF | icd10_code::ipccc_code`
),
by = "code_id"
) %>%
# Join the EPCC codes from the EPCC Resource
left_join(
epcc.final %>%
arrange(icd10am_code) %>%
mutate(icd_seq = row_number(),
.by = icd10am_code) %>%
select("code_id" = icd10am_code, icd10am_name,
epcc_code, epcc_name, icd_seq) %>%
filter(icd10am_name != "Multiple codes") %>%
reframe(
epcc_code_first = unique(epcc_code)[1],
epcc_code_all = toString(unique(epcc_code)),
epcc_code_multiple = length(unique(epcc_code)) > 1,
.by = c(code_id)
),
by = "code_id"
) %>%
mutate(
chapter_groups = case_when(
block_desc == "Congenital malformations of the circulatory system" ~ "CHD",
block_desc %in% c("Congenital malformations and deformations of the musculoskeletal system",
"Congenital malformations of eye, ear, face and neck",
"Congenital malformations of genital organs",
"Congenital malformations of the nervous system",
"Congenital malformations of the respiratory system",
"Congenital malformations of the urinary system") ~ "other congential",
chapter_desc == "Diseases of the circulatory system (I00-I99)" ~ "cariovascular",
!chapter_desc %in% c("Diseases of the circulatory system (I00-I99)" ~ "cariovascular",
"Congenital malformations, deformations and chromosomal abnormalities") ~ "other"
),
epcc_code = case_when(
!is.na(epcc_code_ks2) ~ epcc_code_ks2,
!is.na(epcc_code_ks1) ~ epcc_code_ks1,
!is.na(epcc_code_all) ~ epcc_code_first,
),
epcc_code_source = case_when(
!is.na(epcc_code_ks2) ~ "keysoft_v2",
!is.na(epcc_code_ks1) ~ "keysoft_v1",
!is.na(epcc_code_all) ~ "epcc",
)
) %>%
# Join the EPCC names from the DRT
left_join(
drt %>% select(epcc_code, epcc_name),
by = "epcc_code"
) %>%
# tidy columns
select(
"icd10am_code" = code_id,
"icd10am_name" = ascii_desc,
epcc_code, epcc_name, epcc_code_source, chapter_groups,
epcc_code_multiple, epcc_code_all, epcc_code_first,
epcc_code_ks1, epcc_code_ks2,
block, block_desc, chapter_range, chapter_desc
)
# Keysoft Translation v1
icd10am.join %>%
filter(is.na(epcc_code_ks1)) %>%
tabyl(chapter_groups)
# Keysoft Translation v2
icd10am.join %>%
filter(is.na(epcc_code_ks2)) %>%
tabyl(chapter_groups)
# EPCC resource
icd10am.join %>%
filter(is.na(epcc_code_first)) %>%
tabyl(chapter_groups)
# Combined
icd10am.join %>%
filter(is.na(epcc_code)) %>%
tabyl(chapter_groups)
# Number of EPCC codes that are not found in the diagnosis reference table
icd10am.join %>%
filter(!is.na(epcc_code)) %>%
mutate(in_drt = !is.na(epcc_name)) %>%
tabyl(in_drt)
View(icd10am.join)
View(ipccc)
View(epcc.final)
View(drt)
